/*
 * Info.h
 *
 *  Created on: Jun 3, 2014
 *      Author: ivan
 */

#ifndef INFO_H_
#define INFO_H_

#include <vector>

//const char DATADIR[] = "/home/ivan/Projects/CLASHES/random/data";

const char AAA1[] = { 'A', 'R', 'N', 'D', 'C', 'Q', 'E', 'G', 'H', 'I', 'L',
		'K', 'M', 'F', 'P', 'S', 'T', 'W', 'Y', 'V', 'B', 'J', 'Z', 'X', 'X', 'M' };

const char AAA3[][4] = { "ALA", "ARG", "ASN", "ASP", "CYS", "GLN", "GLU", "GLY",
		"HIS", "ILE", "LEU", "LYS", "MET", "PHE", "PRO", "SER", "THR", "TRP",
		"TYR", "VAL", "ASX", "XLE", "GLX", "UNK", "   ", "MSE" };

const int BLOSUM62[25][25] = { { 4, -1, -2, -2, 0, -1, -1, 0, -2, -1, -1, -1,
		-1, -2, -1, 1, 0, -3, -2, 0, -2, -1, -1, -1, -4 }, { -1, 5, 0, -2, -3,
		1, 0, -2, 0, -3, -2, 2, -1, -3, -2, -1, -1, -3, -2, -3, -1, -2, 0, -1,
		-4 }, { -2, 0, 6, 1, -3, 0, 0, 0, 1, -3, -3, 0, -2, -3, -2, 1, 0, -4,
		-2, -3, 4, -3, 0, -1, -4 }, { -2, -2, 1, 6, -3, 0, 2, -1, -1, -3, -4,
		-1, -3, -3, -1, 0, -1, -4, -3, -3, 4, -3, 1, -1, -4 }, { 0, -3, -3, -3,
		9, -3, -4, -3, -3, -1, -1, -3, -1, -2, -3, -1, -1, -2, -2, -1, -3, -1,
		-3, -1, -4 }, { -1, 1, 0, 0, -3, 5, 2, -2, 0, -3, -2, 1, 0, -3, -1, 0,
		-1, -2, -1, -2, 0, -2, 4, -1, -4 }, { -1, 0, 0, 2, -4, 2, 5, -2, 0, -3,
		-3, 1, -2, -3, -1, 0, -1, -3, -2, -2, 1, -3, 4, -1, -4 }, { 0, -2, 0,
		-1, -3, -2, -2, 6, -2, -4, -4, -2, -3, -3, -2, 0, -2, -2, -3, -3, -1,
		-4, -2, -1, -4 }, { -2, 0, 1, -1, -3, 0, 0, -2, 8, -3, -3, -1, -2, -1,
		-2, -1, -2, -2, 2, -3, 0, -3, 0, -1, -4 }, { -1, -3, -3, -3, -1, -3, -3,
		-4, -3, 4, 2, -3, 1, 0, -3, -2, -1, -3, -1, 3, -3, 3, -3, -1, -4 }, {
		-1, -2, -3, -4, -1, -2, -3, -4, -3, 2, 4, -2, 2, 0, -3, -2, -1, -2, -1,
		1, -4, 3, -3, -1, -4 }, { -1, 2, 0, -1, -3, 1, 1, -2, -1, -3, -2, 5, -1,
		-3, -1, 0, -1, -3, -2, -2, 0, -3, 1, -1, -4 }, { -1, -1, -2, -3, -1, 0,
		-2, -3, -2, 1, 2, -1, 5, 0, -2, -1, -1, -1, -1, 1, -3, 2, -1, -1, -4 },
		{ -2, -3, -3, -3, -2, -3, -3, -3, -1, 0, 0, -3, 0, 6, -4, -2, -2, 1, 3,
				-1, -3, 0, -3, -1, -4 }, { -1, -2, -2, -1, -3, -1, -1, -2, -2,
				-3, -3, -1, -2, -4, 7, -1, -1, -4, -3, -2, -2, -3, -1, -1, -4 },
		{ 1, -1, 1, 0, -1, 0, 0, 0, -1, -2, -2, 0, -1, -2, -1, 4, 1, -3, -2, -2,
				0, -2, 0, -1, -4 }, { 0, -1, 0, -1, -1, -1, -1, -2, -2, -1, -1,
				-1, -1, -2, -1, 1, 5, -2, -2, 0, -1, -1, -1, -1, -4 }, { -3, -3,
				-4, -4, -2, -2, -3, -2, -2, -3, -2, -3, -1, 1, -4, -3, -2, 11,
				2, -3, -4, -2, -2, -1, -4 },
		{ -2, -2, -2, -3, -2, -1, -2, -3, 2, -1, -1, -2, -1, 3, -3, -2, -2, 2,
				7, -1, -3, -1, -2, -1, -4 }, { 0, -3, -3, -3, -1, -2, -2, -3,
				-3, 3, 1, -2, 1, -1, -2, -2, 0, -3, -1, 4, -3, 2, -2, -1, -4 },
		{ -2, -1, 4, 4, -3, 0, 1, -1, 0, -3, -4, 0, -3, -3, -2, 0, -1, -4, -3,
				-3, 4, -3, 0, -1, -4 }, { -1, -2, -3, -3, -1, -2, -3, -4, -3, 3,
				3, -3, 2, 0, -3, -2, -1, -2, -1, 2, -3, 3, -3, -1, -4 }, { -1,
				0, 0, 1, -3, 4, 4, -2, 0, -3, -3, 1, -1, -3, -1, 0, -1, -2, -2,
				-2, 0, -3, 4, -1, -4 },
		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
				-1, -1, -1, -1, -1, -1, -1, -4 }, { -4, -4, -4, -4, -4, -4, -4,
				-4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4,
				-4, 1 } };

/*
 * Ca-Ca distances and standard deviations from PCalign:
 *
 * Sh Cheng, Y Zhang, Ch L Brooks. PCalign: a method to quantify
 * physicochemical similarity of protein-protein interfaces.
 * BMC Bioinformatics. 2015 Feb 1;16(1):33
 *
 * (Suppl. Tables 1a,b - !!! RECALCULATED BY I.A. !!!)
 *
 * The order in the arrays below corresponds to AAA1[ ]*/

/* mean Ca-Ca distances */
const double PCALIGN_DIST[20][20] = { { 5.65, 7.88, 6.46, 6.31, 6.29, 7.00,
		6.80, 5.32, 7.03, 6.73, 6.91, 7.25, 7.06, 7.49, 6.16, 5.89, 6.27, 8.17,
		7.64, 6.34 }, { 7.88, 9.80, 8.73, 9.20, 8.03, 9.08, 9.60, 7.72, 9.12,
		8.46, 8.48, 9.36, 8.71, 8.95, 8.44, 8.14, 8.40, 9.32, 9.43, 8.20 }, {
		6.46, 8.73, 7.32, 7.35, 6.82, 7.89, 7.82, 6.19, 7.81, 7.22, 7.47, 8.02,
		7.60, 7.87, 6.95, 6.74, 7.01, 8.56, 8.47, 6.99 }, { 6.31, 9.20, 7.35,
		7.33, 6.76, 8.00, 7.92, 6.04, 8.34, 7.11, 7.28, 8.64, 7.62, 7.81, 6.83,
		6.60, 6.79, 8.81, 8.95, 6.83 }, { 6.29, 8.03, 6.82, 6.76, 6.52, 7.65,
		7.07, 5.88, 7.77, 7.14, 7.38, 7.60, 7.52, 8.03, 6.63, 6.18, 6.53, 8.19,
		7.93, 6.67 }, { 7.00, 9.08, 7.89, 8.00, 7.65, 8.47, 8.46, 6.64, 8.38,
		7.76, 7.94, 8.65, 8.07, 8.39, 7.46, 7.41, 7.50, 8.68, 9.11, 7.46 }, {
		6.80, 9.60, 7.82, 7.92, 7.07, 8.46, 8.41, 6.56, 8.58, 7.53, 7.69, 9.10,
		7.94, 8.21, 7.34, 7.26, 7.42, 9.12, 9.24, 7.31 }, { 5.32, 7.72, 6.19,
		6.04, 5.88, 6.64, 6.56, 5.08, 6.64, 6.31, 6.32, 7.06, 6.52, 6.84, 5.79,
		5.67, 5.87, 7.46, 7.39, 5.94 }, { 7.03, 9.12, 7.81, 8.34, 7.77, 8.38,
		8.58, 6.64, 8.27, 7.89, 8.04, 8.44, 8.03, 8.50, 7.38, 7.32, 7.73, 9.21,
		8.96, 7.51 }, { 6.73, 8.46, 7.22, 7.11, 7.14, 7.76, 7.53, 6.31, 7.89,
		7.88, 8.10, 7.69, 8.20, 8.58, 7.23, 6.77, 7.26, 9.04, 8.48, 7.45 }, {
		6.91, 8.48, 7.47, 7.28, 7.38, 7.94, 7.69, 6.32, 8.04, 8.10, 8.17, 7.82,
		8.35, 8.77, 7.38, 7.01, 7.41, 9.31, 8.70, 7.67 }, { 7.25, 9.36, 8.02,
		8.64, 7.60, 8.65, 9.10, 7.06, 8.44, 7.69, 7.82, 8.86, 8.04, 8.20, 7.56,
		7.77, 7.67, 8.68, 8.93, 7.39 }, { 7.06, 8.71, 7.60, 7.62, 7.52, 8.07,
		7.94, 6.52, 8.03, 8.20, 8.35, 8.04, 8.27, 8.84, 7.48, 7.24, 7.53, 9.22,
		8.78, 7.67 }, { 7.49, 8.95, 7.87, 7.81, 8.03, 8.39, 8.21, 6.84, 8.50,
		8.58, 8.77, 8.20, 8.84, 9.09, 7.67, 7.46, 8.07, 9.74, 9.17, 8.21 }, {
		6.16, 8.44, 6.95, 6.83, 6.63, 7.46, 7.34, 5.79, 7.38, 7.23, 7.38, 7.56,
		7.48, 7.67, 6.63, 6.45, 6.66, 8.09, 8.15, 6.85 }, { 5.89, 8.14, 6.74,
		6.60, 6.18, 7.41, 7.26, 5.67, 7.32, 6.77, 7.01, 7.77, 7.24, 7.46, 6.45,
		6.15, 6.36, 7.91, 8.03, 6.51 }, { 6.27, 8.40, 7.01, 6.79, 6.53, 7.50,
		7.42, 5.87, 7.73, 7.26, 7.41, 7.67, 7.53, 8.07, 6.66, 6.36, 6.77, 8.63,
		8.25, 6.85 }, { 8.17, 9.32, 8.56, 8.81, 8.19, 8.68, 9.12, 7.46, 9.21,
		9.04, 9.31, 8.68, 9.22, 9.74, 8.09, 7.91, 8.63, 9.61, 9.67, 8.81 }, {
		7.64, 9.43, 8.47, 8.95, 7.93, 9.11, 9.24, 7.39, 8.96, 8.48, 8.70, 8.93,
		8.78, 9.17, 8.15, 8.03, 8.25, 9.67, 9.06, 8.15 }, { 6.34, 8.20, 6.99,
		6.83, 6.67, 7.46, 7.31, 5.94, 7.51, 7.45, 7.67, 7.39, 7.67, 8.21, 6.85,
		6.51, 6.85, 8.81, 8.15, 7.05 } };

/* standard deviations corresponding to PCALIGN_DIST[ ][ ] */
const double PCALIGN_STD[20][20] = { { 0.93, 1.91, 1.16, 1.15, 1.00, 1.42, 1.43,
		0.98, 1.36, 1.08, 1.17, 1.72, 1.44, 1.57, 0.93, 0.96, 0.91, 1.84, 1.87,
		0.88 }, { 1.91, 2.73, 2.06, 2.04, 1.88, 2.12, 2.25, 2.05, 2.13, 1.99,
		1.93, 2.41, 1.98, 2.04, 1.96, 2.04, 1.97, 2.22, 2.46, 1.95 }, { 1.16,
		2.06, 1.46, 1.38, 1.31, 1.61, 1.61, 1.27, 1.50, 1.35, 1.37, 1.89, 1.69,
		1.75, 1.23, 1.22, 1.27, 1.91, 2.04, 1.19 }, { 1.15, 2.04, 1.38, 1.67,
		1.41, 1.66, 1.75, 1.28, 1.58, 1.31, 1.32, 1.84, 1.55, 1.74, 1.17, 1.20,
		1.21, 1.72, 1.94, 1.17 }, { 1.00, 1.88, 1.31, 1.41, 1.28, 1.53, 1.60,
		1.04, 1.52, 1.29, 1.29, 1.63, 1.54, 1.84, 1.04, 1.04, 1.12, 2.15, 1.93,
		1.07 }, { 1.42, 2.12, 1.61, 1.66, 1.53, 2.05, 1.79, 1.52, 1.82, 1.53,
		1.48, 2.06, 1.67, 1.90, 1.42, 1.49, 1.45, 1.94, 2.19, 1.39 }, { 1.43,
		2.25, 1.61, 1.75, 1.60, 1.79, 2.07, 1.49, 1.81, 1.49, 1.39, 2.10, 1.54,
		1.75, 1.43, 1.42, 1.44, 1.96, 2.13, 1.35 }, { 0.98, 2.05, 1.27, 1.28,
		1.04, 1.52, 1.49, 1.26, 1.48, 1.23, 1.24, 1.88, 1.52, 1.61, 1.05, 1.01,
		1.07, 1.76, 2.02, 1.03 }, { 1.36, 2.13, 1.50, 1.58, 1.52, 1.82, 1.81,
		1.48, 2.03, 1.56, 1.46, 1.98, 1.69, 1.74, 1.47, 1.54, 1.54, 2.09, 2.19,
		1.44 }, { 1.08, 1.99, 1.35, 1.31, 1.29, 1.53, 1.49, 1.23, 1.56, 1.54,
		1.41, 1.64, 1.62, 1.76, 1.20, 1.22, 1.30, 1.93, 1.85, 1.27 }, { 1.17,
		1.93, 1.37, 1.32, 1.29, 1.48, 1.39, 1.24, 1.46, 1.41, 1.54, 1.58, 1.61,
		1.74, 1.25, 1.26, 1.27, 1.99, 1.89, 1.26 }, { 1.72, 2.41, 1.89, 1.84,
		1.63, 2.06, 2.10, 1.88, 1.98, 1.64, 1.58, 2.70, 1.77, 1.79, 1.74, 1.87,
		1.81, 2.15, 2.30, 1.65 }, { 1.44, 1.98, 1.69, 1.55, 1.54, 1.67, 1.54,
		1.52, 1.69, 1.62, 1.61, 1.77, 1.97, 1.89, 1.45, 1.52, 1.54, 2.04, 2.08,
		1.53 }, { 1.57, 2.04, 1.75, 1.74, 1.84, 1.90, 1.75, 1.61, 1.74, 1.76,
		1.74, 1.79, 1.89, 2.29, 1.53, 1.67, 1.66, 2.26, 2.10, 1.63 }, { 0.93,
		1.96, 1.23, 1.17, 1.04, 1.42, 1.43, 1.05, 1.47, 1.20, 1.25, 1.74, 1.45,
		1.53, 1.20, 1.07, 1.08, 1.72, 1.81, 1.00 }, { 0.96, 2.04, 1.22, 1.20,
		1.04, 1.49, 1.42, 1.01, 1.54, 1.22, 1.26, 1.87, 1.52, 1.67, 1.07, 1.16,
		1.07, 2.11, 1.93, 1.07 }, { 0.91, 1.97, 1.27, 1.21, 1.12, 1.45, 1.44,
		1.07, 1.54, 1.30, 1.27, 1.81, 1.54, 1.66, 1.08, 1.07, 1.25, 1.90, 1.93,
		1.11 }, { 1.84, 2.22, 1.91, 1.72, 2.15, 1.94, 1.96, 1.76, 2.09, 1.93,
		1.99, 2.15, 2.04, 2.26, 1.72, 2.11, 1.90, 2.80, 2.26, 1.95 }, { 1.87,
		2.46, 2.04, 1.94, 1.93, 2.19, 2.13, 2.02, 2.19, 1.85, 1.89, 2.30, 2.08,
		2.10, 1.81, 1.93, 1.93, 2.26, 2.68, 1.89 }, { 0.88, 1.95, 1.19, 1.17,
		1.07, 1.39, 1.35, 1.03, 1.44, 1.27, 1.26, 1.65, 1.53, 1.63, 1.00, 1.07,
		1.11, 1.95, 1.89, 1.20 } };

/* mean distances between centroids */
const std::vector<std::vector<double> > CENTROID_DIST = { { 5.76, 6.71, 6.09,
		6.12, 6.20, 6.38, 6.35, 5.33, 6.35, 6.40, 6.49, 6.55, 6.55, 6.58, 6.05,
		5.85, 6.15, 6.82, 6.64, 6.19 }, { 6.71, 7.64, 7.26, 7.25, 6.88, 7.36,
		7.46, 6.46, 7.30, 7.18, 7.11, 7.78, 7.26, 7.22, 7.14, 6.89, 7.08, 7.36,
		7.44, 7.03 }, { 6.09, 7.26, 6.52, 6.62, 6.40, 6.85, 6.83, 5.82, 6.76,
		6.60, 6.77, 7.02, 6.84, 6.88, 6.45, 6.24, 6.50, 7.07, 7.12, 6.51 }, {
		6.12, 7.25, 6.62, 6.64, 6.43, 6.93, 7.02, 5.76, 6.93, 6.63, 6.67, 7.20,
		6.94, 6.80, 6.46, 6.19, 6.34, 7.19, 7.28, 6.45 }, { 6.20, 6.88, 6.40,
		6.43, 6.15, 6.89, 6.49, 5.77, 6.78, 6.67, 6.77, 6.90, 6.86, 6.99, 6.38,
		6.10, 6.37, 6.99, 6.89, 6.41 }, { 6.38, 7.36, 6.85, 6.93, 6.89, 7.00,
		7.14, 6.02, 7.12, 6.81, 6.92, 7.33, 6.98, 7.03, 6.67, 6.64, 6.65, 7.16,
		7.41, 6.64 }, { 6.35, 7.46, 6.83, 7.02, 6.49, 7.14, 7.15, 5.99, 7.08,
		6.77, 6.78, 7.42, 6.91, 7.01, 6.63, 6.48, 6.62, 7.32, 7.40, 6.63 }, {
		5.33, 6.46, 5.82, 5.76, 5.77, 6.02, 5.99, 5.08, 5.92, 6.02, 5.95, 6.36,
		6.02, 6.09, 5.66, 5.58, 5.71, 6.26, 6.30, 5.78 }, { 6.35, 7.30, 6.76,
		6.93, 6.78, 7.12, 7.08, 5.92, 6.74, 6.86, 6.95, 7.23, 6.89, 7.01, 6.60,
		6.49, 6.71, 7.31, 7.23, 6.69 }, { 6.40, 7.18, 6.60, 6.63, 6.67, 6.81,
		6.77, 6.02, 6.86, 7.01, 7.14, 6.87, 7.20, 7.22, 6.72, 6.45, 6.80, 7.40,
		7.10, 6.84 }, { 6.49, 7.11, 6.77, 6.67, 6.77, 6.92, 6.78, 5.95, 6.95,
		7.14, 7.13, 6.91, 7.26, 7.26, 6.78, 6.57, 6.81, 7.48, 7.17, 6.94 }, {
		6.55, 7.78, 7.02, 7.20, 6.90, 7.33, 7.42, 6.36, 7.23, 6.87, 6.91, 7.74,
		7.08, 6.94, 6.91, 6.89, 6.87, 7.21, 7.36, 6.72 }, { 6.55, 7.26, 6.84,
		6.94, 6.86, 6.98, 6.91, 6.02, 6.89, 7.20, 7.26, 7.08, 7.06, 7.27, 6.75,
		6.69, 6.89, 7.40, 7.24, 6.88 }, { 6.58, 7.22, 6.88, 6.80, 6.99, 7.03,
		7.01, 6.09, 7.01, 7.22, 7.26, 6.94, 7.27, 7.17, 6.61, 6.65, 7.02, 7.60,
		7.27, 7.04 }, { 6.05, 7.14, 6.45, 6.46, 6.38, 6.67, 6.63, 5.66, 6.60,
		6.72, 6.78, 6.91, 6.75, 6.61, 6.28, 6.23, 6.40, 6.65, 6.78, 6.50 }, {
		5.85, 6.89, 6.24, 6.19, 6.10, 6.64, 6.48, 5.58, 6.49, 6.45, 6.57, 6.89,
		6.69, 6.65, 6.23, 5.96, 6.17, 6.81, 6.95, 6.28 }, { 6.15, 7.08, 6.50,
		6.34, 6.37, 6.65, 6.62, 5.71, 6.71, 6.80, 6.81, 6.87, 6.89, 7.02, 6.40,
		6.17, 6.44, 7.34, 7.08, 6.51 }, { 6.82, 7.36, 7.07, 7.19, 6.99, 7.16,
		7.32, 6.26, 7.31, 7.40, 7.48, 7.21, 7.40, 7.60, 6.65, 6.81, 7.34, 7.48,
		7.62, 7.24 }, { 6.64, 7.44, 7.12, 7.28, 6.89, 7.41, 7.40, 6.30, 7.23,
		7.10, 7.17, 7.36, 7.24, 7.27, 6.78, 6.95, 7.08, 7.62, 7.24, 6.98 }, {
		6.19, 7.03, 6.51, 6.45, 6.41, 6.64, 6.63, 5.78, 6.69, 6.84, 6.94, 6.72,
		6.88, 7.04, 6.50, 6.28, 6.51, 7.24, 6.98, 6.60 } };

/* standard deviations corresponding to CENTROID_DIST[ ][ ] */
const std::vector<std::vector<double> > CENTROID_STD = { { 0.81, 1.20, 0.90,
		0.92, 0.92, 0.95, 1.02, 0.91, 0.96, 0.88, 0.89, 1.18, 1.05, 0.98, 0.74,
		0.78, 0.78, 1.13, 1.15, 0.74 }, { 1.20, 1.72, 1.35, 1.33, 1.31, 1.43,
		1.42, 1.35, 1.47, 1.33, 1.29, 1.63, 1.34, 1.51, 1.27, 1.28, 1.29, 1.70,
		1.70, 1.32 }, { 0.90, 1.35, 1.10, 1.07, 1.07, 1.10, 1.17, 1.08, 1.03,
		1.07, 1.03, 1.35, 1.24, 1.20, 0.89, 0.91, 0.96, 1.15, 1.33, 0.96 }, {
		0.92, 1.33, 1.07, 1.30, 1.07, 1.17, 1.23, 1.09, 1.05, 1.05, 1.05, 1.27,
		1.19, 1.20, 0.87, 0.95, 0.97, 1.08, 1.21, 0.94 }, { 0.92, 1.31, 1.07,
		1.07, 1.10, 1.05, 1.17, 1.01, 1.07, 1.03, 0.99, 1.22, 1.09, 1.23, 0.78,
		0.87, 0.91, 1.38, 1.23, 0.93 }, { 0.95, 1.43, 1.10, 1.17, 1.05, 1.37,
		1.27, 1.17, 1.26, 1.12, 1.11, 1.46, 1.21, 1.31, 1.05, 1.03, 1.07, 1.44,
		1.50, 1.02 }, { 1.02, 1.42, 1.17, 1.23, 1.17, 1.27, 1.44, 1.22, 1.16,
		1.11, 1.05, 1.39, 1.23, 1.26, 0.99, 1.00, 1.07, 1.32, 1.37, 1.03 }, {
		0.91, 1.35, 1.08, 1.09, 1.01, 1.17, 1.22, 1.26, 1.18, 1.05, 1.05, 1.41,
		1.24, 1.18, 0.91, 0.97, 0.99, 1.33, 1.41, 0.95 }, { 0.96, 1.47, 1.03,
		1.05, 1.07, 1.26, 1.16, 1.18, 1.44, 1.08, 1.05, 1.46, 1.22, 1.22, 0.95,
		1.09, 1.03, 1.37, 1.42, 1.03 }, { 0.88, 1.33, 1.07, 1.05, 1.03, 1.12,
		1.11, 1.05, 1.08, 1.19, 1.05, 1.23, 1.20, 1.14, 0.86, 0.93, 0.97, 1.20,
		1.19, 0.97 }, { 0.89, 1.29, 1.03, 1.05, 0.99, 1.11, 1.05, 1.05, 1.05,
		1.05, 1.14, 1.21, 1.18, 1.17, 0.90, 0.92, 0.92, 1.29, 1.23, 0.93 }, {
		1.18, 1.63, 1.35, 1.27, 1.22, 1.46, 1.39, 1.41, 1.46, 1.23, 1.21, 1.91,
		1.27, 1.32, 1.24, 1.29, 1.25, 1.64, 1.61, 1.20 }, { 1.05, 1.34, 1.24,
		1.19, 1.09, 1.21, 1.23, 1.24, 1.22, 1.20, 1.18, 1.27, 1.49, 1.26, 1.03,
		1.13, 1.16, 1.45, 1.39, 1.15 }, { 0.98, 1.51, 1.20, 1.20, 1.23, 1.31,
		1.26, 1.18, 1.22, 1.14, 1.17, 1.32, 1.26, 1.42, 1.04, 1.05, 1.04, 1.41,
		1.34, 1.00 }, { 0.74, 1.27, 0.89, 0.87, 0.78, 1.05, 0.99, 0.91, 0.95,
		0.86, 0.90, 1.24, 1.03, 1.04, 0.84, 0.81, 0.79, 1.21, 1.17, 0.74 }, {
		0.78, 1.28, 0.91, 0.95, 0.87, 1.03, 1.00, 0.97, 1.09, 0.93, 0.92, 1.29,
		1.13, 1.05, 0.81, 0.95, 0.85, 1.19, 1.20, 0.85 }, { 0.78, 1.29, 0.96,
		0.97, 0.91, 1.07, 1.07, 0.99, 1.03, 0.97, 0.92, 1.25, 1.16, 1.04, 0.79,
		0.85, 1.00, 1.07, 1.20, 0.88 }, { 1.13, 1.70, 1.15, 1.08, 1.38, 1.44,
		1.32, 1.33, 1.37, 1.20, 1.29, 1.64, 1.45, 1.41, 1.21, 1.19, 1.07, 1.84,
		1.41, 1.17 }, { 1.15, 1.70, 1.33, 1.21, 1.23, 1.50, 1.37, 1.41, 1.42,
		1.19, 1.23, 1.61, 1.39, 1.34, 1.17, 1.20, 1.20, 1.41, 1.72, 1.17 }, {
		0.74, 1.32, 0.96, 0.94, 0.93, 1.02, 1.03, 0.95, 1.03, 0.97, 0.93, 1.20,
		1.15, 1.00, 0.74, 0.85, 0.88, 1.17, 1.17, 0.96 } };

/* basis sets for convex polytopes */
#define ONE_OVER_SQRT2 0.707106781186547
#define ONE_OVER_SQRT3 0.577350269189626

const double POLY26[13][3] = { /* a polytope with 13 pairs of parallel faces */
{ 1.0, 0.0, 0.0 }, /* X, 0, 0 */
{ 0.0, 1.0, 0.0 }, /* 0, Y, 0 */
{ 0.0, 0.0, 1.0 }, /* 0, 0, Z */
{ ONE_OVER_SQRT3, ONE_OVER_SQRT3, ONE_OVER_SQRT3 }, /* X, Y, Z */
{ -ONE_OVER_SQRT3, ONE_OVER_SQRT3, ONE_OVER_SQRT3 }, /* -X, Y, Z */
{ ONE_OVER_SQRT3, -ONE_OVER_SQRT3, ONE_OVER_SQRT3 }, /* X, -Y, Z */
{ ONE_OVER_SQRT3, ONE_OVER_SQRT3, -ONE_OVER_SQRT3 }, /* X, Y, -Z */
{ ONE_OVER_SQRT2, ONE_OVER_SQRT2, 0.0 }, /* X, Y, 0 */
{ -ONE_OVER_SQRT2, ONE_OVER_SQRT2, 0.0 }, /* -X, Y, 0 */
{ ONE_OVER_SQRT2, 0.0, ONE_OVER_SQRT2 }, /* X, 0, Z */
{ -ONE_OVER_SQRT2, 0.0, ONE_OVER_SQRT2 }, /* -X, 0, Z */
{ 0.0, ONE_OVER_SQRT2, ONE_OVER_SQRT2 }, /* 0, Y, Z */
{ 0.0, -ONE_OVER_SQRT2, ONE_OVER_SQRT2 } /* 0, -Y, Z */
};

const double POLY14[7][3] = { /* a polytope with 7 pairs of parallel faces */
{ 1.0, 0.0, 0.0 }, /* X, 0, 0 */
{ 0.0, 1.0, 0.0 }, /* 0, Y, 0 */
{ 0.0, 0.0, 1.0 }, /* 0, 0, Z */
{ ONE_OVER_SQRT3, ONE_OVER_SQRT3, ONE_OVER_SQRT3 }, /* X, Y, Z */
{ -ONE_OVER_SQRT3, ONE_OVER_SQRT3, ONE_OVER_SQRT3 }, /* -X, Y, Z */
{ ONE_OVER_SQRT3, -ONE_OVER_SQRT3, ONE_OVER_SQRT3 }, /* X, -Y, Z */
{ ONE_OVER_SQRT3, ONE_OVER_SQRT3, -ONE_OVER_SQRT3 } /* X, Y, -Z */
};

#endif /* INFO_H_ */
